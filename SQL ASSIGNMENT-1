TASK 1
------
create database task1;
use task1;

create table shopping_history
(  product varchar(100), 
   quantity int not null,
   unit_price int not null 
);
   
insert into shopping_history(product, quantity, unit_price) values('milk',3,10);
insert into shopping_history(product, quantity, unit_price) values('bread',7,3);
insert into shopping_history(product, quantity, unit_price) values('bread',5,4);
insert into shopping_history(product, quantity, unit_price) values('butter',9,2);
insert into shopping_history(product, quantity, unit_price) values('butter',12,1);

select * from shopping_history;

select product , sum(quantity*unit_price) as total_price from shopping_history
group by product
order by product;

TASK 2
------
create database task2;
use task2;

create table phones
( phn_name varchar(30) not null unique,
  phn_num int not null unique
);

insert into phones(phn_name , phn_num) values('Jack',1234);
insert into phones(phn_name , phn_num) values('Lena',3333);
insert into phones(phn_name , phn_num) values('Mark',9999);
insert into phones(phn_name , phn_num) values('Anna',7582);

select * from phones;

create table calls
( id int not null unique,
  caller int not null,
  callee int not null,
  duration int not null
);

insert into calls(id, caller, callee, duration) values(25,1234,7582,8);
insert into calls(id, caller, callee, duration) values(7,9999,7582,1);
insert into calls(id, caller, callee, duration) values(18,9999,3333,4);
insert into calls(id, caller, callee, duration) values(2,7582,3333,3);
insert into calls(id, caller, callee, duration) values(3,3333,1234,1);
insert into calls(id, caller, callee, duration) values(21,3333,1234,1);

select * from calls;

select p.phn_name from phones p left join calls c on p.phn_num in (c.caller, c.callee)
group by p.phn_name
having SUM(c.duration) >= 10
order by p.phn_name asc;

TASK 3
------
create database task3;
use task3;

create table transactions
(  amount int not null,
   transaction_date date not null ) ;
   
insert into transactions(amount,transaction_date) values(1000,'2020-01-06');
insert into transactions(amount,transaction_date) values(-10,'2020-01-14');
insert into transactions(amount,transaction_date) values(-75,'2020-01-20');
insert into transactions(amount,transaction_date) values(-5,'2020-01-25');
insert into transactions(amount,transaction_date) values(-4,'2020-01-29');
insert into transactions(amount,transaction_date) values(2000,'2020-03-10');
insert into transactions(amount,transaction_date) values(-75,'2020-03-12');
insert into transactions(amount,transaction_date) values(-20,'2020-03-15');
insert into transactions(amount,transaction_date) values(40,'2020-03-15');
insert into transactions(amount,transaction_date) values(-50,'2020-03-17');
insert into transactions(amount,transaction_date) values(200,'2020-10-10');
insert into transactions(amount,transaction_date) values(-200,'2020-10-10');

select * from transactions;

select sum(total_amon) - 5*(12 - sum(case when (debit <= -100) and (num_tran >= 3) then 1 else 0 end))
from (
select month(transaction_date) as mon,
sum(case when amount < 0 then amount else 0 end) as debit, 
sum(amount) total_amon,
count(*) num_tran
from transactions
group by month(transaction_date)) a
